<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <!--<link rel="stylesheet" href="/assets/css/amazeui.min.css"/>-->
    <link rel="stylesheet" href="/assets/css/amazeui.flat.min.css"/>
    <link rel='stylesheet' href='/css/style.css'/>
</head>
<body>
    <div class="am-container">
        <div class="am-g">
            <div class="am-panel-default am-u-sm-4 am-u-xs-4">
                <section class="am-panel am-panel-secondary">
                    <header class="am-panel-hd">
                        <h3 class="am-panel-title">个人信息</h3>
                    </header>
                    <div class="am-panel-bd myUserInfo">
                        <img src="/images/shuijiao.jpg" alt="" class="am-circle">
                        <span id="myId"></span>
                    </div>
                    <!--<footer class="am-panel-footer">面板页脚</footer>-->
                </section>

                <section class=" am-panel am-panel-primary">
                    <header class="am-panel-hd">
                        <h3 class="am-panel-title">好友列表</h3>
                    </header>
                    <div class="am-panel-bd">
                        <ul class="friendList">


                        </ul>
                    </div>
                    <!--<footer class="am-panel-footer">面板页脚</footer>-->
                </section>
            </div>
            <div class="am-panel-default  am-u-sm-8 am-u-xs-8">
                <section class=" am-panel am-panel-primary">
                    <header class="am-panel-hd">
                        <h3 class="am-panel-title" id="myNicName">昵称</h3>
                    </header>
                    <div class="am-panel-bd" id="messageList">

                    </div>
                    <footer class="am-panel-footer">
                        <div class="am-btn-toolbar">
                            <div class="am-btn-group">
                                <a class="am-btn am-btn-primary" href="#">
                                    <i class="am-icon-smile-o"></i>
                                </a>
                            </div>
                            <div class="am-btn-group">
                                <a class="am-btn am-btn-primary" href="#">
                                    <i class="am-icon-image"></i>
                                </a>
                            </div>
                            <div class="am-btn-group">
                                <a class="am-btn am-btn-primary" href="#">
                                    <i class="am-icon-file"></i>
                                </a>
                            </div>
                        </div>
                    </footer>
                </section>
                <div class="am-input-group">
                    <input type="text" class="am-form-field" placeholder="请输入聊天内容" id="chatText">
                        <span class="am-input-group-label">
                            <a class="am-btn am-btn-primary" href="#" id="sendBtn">
                                <i class="am-icon-send"></i>
                                发送
                            </a>
                        </span>
                </div>
            </div>
        </div>
    </div>

    <div class="am-modal am-modal-no-btn" tabindex="-1" id="login-model">
        <div class="am-modal-dialog">
            <div class="am-modal-hd">用户登录
                <!--<a href="javascript: void(0)" class="am-close am-close-spin" data-am-modal-close>&times;</a>-->
            </div>
            <div class="am-modal-bd">
                <form class="am-form am-form-horizontal">
                    <div class="am-form-group">
                        <label for="doc-ipt-3" class="am-u-sm-2 am-form-label">用户名</label>
                        <div class="am-u-sm-10">
                            <input type="text" name="username" placeholder="请输入用户名">
                        </div>
                    </div>

                    <div class="am-form-group">
                        <label for="doc-ipt-pwd-2" class="am-u-sm-2 am-form-label">密码</label>
                        <div class="am-u-sm-10">
                            <input type="password" name="password" placeholder="请输入密码">
                        </div>
                    </div>

                    <div class="am-form-group">
                        <div class="am-u-sm-2 am-u-sm-offset-9">
                            <button type="button" class="am-btn am-btn-primary" onclick="login()">登录</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

</body>
<script src="/js/socket.io.min.js"></script>
<script src="/js/jquery.min.js"></script>
<script src="/assets/js/amazeui.min.js"></script>
<script type="text/javascript">
    var userObj = {
        nick:"",
        uId:""
    }

    var receiveUserObj = {
        nick:"",
        uId:""
    }

    jQuery(document).ready(function () {
            $("#login-model").modal();

    });

    var SocketHandle = function(){
        this.socket = null;
        this.msgHandel = null;
    }

    var MessageHandel = function(){}

    SocketHandle.prototype = {
        init : function(){
            var that = this;
            //建立到服务器的socket连接
            this.socket = io.connect();
            //监听socket的connect事件，此事件表示连接已经建立
            this.msgHandel = new MessageHandel();
            this.msgHandel.init(that);

            //连接提示
            this.socket.on('connect', function(data) {
                //连接到服务器后，显示昵称输入框
                console.log("socket 连接成功");
            })

            //接所有人消息
            this.socket.on('aaa', function(data) {
                //连接到服务器后，显示昵称输入框
                console.log("socket 连接测试")
                console.log(data);
                if(data!=""){
                    that.msgHandel.addToMsgBox(data,true);
                }
            })

            //接收单对单消息
            this.socket.on(userObj.uId,function(data){
               console.log("userObj.uId"+JSON.stringify(data));
                if(data!=""){
                    that.msgHandel.addToMsgBox(data.msg,true);
                }
            });

            //接收上线通知
            this.socket.on('joinIn', function(data) {
                //连接到服务器后，显示昵称输入框
                console.log('joinIn',data)
                that.msgHandel.addFriend(data);
            })

            //接收服务器错误信息
            this.socket.on("errorMsg",function(data){
                console.error(data);

            })

            //用户离线
            this.socket.on('userDisconnected',function(data){
                that.msgHandel.deleteUser(data);
            })
        },
        getSocketId:function(){
            return this.socket.id;
        },
        login : function(data){
            this.socket.emit("login",data);
        },
        error:function(data){
            console.error("error function",data);
        },
        sendMsg : function(data){
            this.socket.emit("msg",data);
        },
        sendMsgToPersonal : function(msg){
            this.socket.emit("sendMsgToPersonal",{
                from:userObj.uId,
                msg:msg,
                to:receiveUserObj.uId
            })
        }
    }

    MessageHandel.prototype = {
        init : function(socket){
            var that = this;
            $("#sendBtn").on('click',function(){
                var content = $(this).parent().prev().val();
                $("#chatText").parent().prev().val("");
                if(content != ""){
                    that.addToMsgBox(content,false);
                    socket.sendMsg(content);
                    socket.sendMsgToPersonal(content);
                }
            });

            $("#chatText").on('focus',function(){
                document.onkeydown=function(event){
                    var e = event ? event :(window.event ? window.event : null);
                    if(e.keyCode==13){
                        var content = $("#chatText").val();
                        $("#chatText").val("");
                        if(content != ""){
                            that.addToMsgBox(content,false);
                            socket.sendMsg(content);
                            socket.sendMsgToPersonal(content);
                        }
                    }
                }
            })
        },
        addFriend : function(name){
            var html ="";
            console.log(name);
            name.forEach(function(item){
                html = '<li class="am-animation-slide-bottom" id='+item.userInfo.uId+'> <img src="/images/shuijiao.jpg" alt="" class="am-circle"> <span>'+item.userInfo.nick+'</span></li>';
                $(".friendList").append(html);
                $("#"+item.userInfo.uId).click(function(){
                    $(this).addClass("active").siblings().removeClass("active");
                    receiveUserObj.uId = $(this).attr("id");
                    receiveUserObj.nick = $(this).find("span").text();
                    console.log(receiveUserObj);
                    $("#myNicName").text("正在与"+receiveUserObj.nick+"聊天");
                })
            })

        }
        ,
        addToMsgBox : function(content,isSend){
            var html = "";
            if(isSend){
                html += '<div class="message left am-animation-slide-bottom"><img src="/images/shuijiao.jpg" alt="" class="am-circle"/><div class="body">'+content+'</div></div>';
            }else{
                html += '<div class="message right am-animation-slide-bottom"> <img src="/images/shuijiao.jpg" alt="" class="am-circle"/><div class="body">'+content+'</div></div>';
            }
            $("#messageList").append(html);
        },
        deleteUser : function(data){
            console.log(data)
            $("#"+data.userInfo.uId).remove();
        }
    }

    var login = function () {
        var username = $("input[name='username']").val();
        var password = $("input[name='password']").val();
        $.post("/loginCheck",{username:username,password:password},function(data){
            if(data.reusltCode != 1){
                alert(data.message);
            }else{

                userObj.nick = "uId"+$("input[name='username']").val();
                userObj.uId = userObj.nick+new Date().getTime();
                $("#myId").text(userObj.nick);
                console.log(userObj);
                var socketHandle = new SocketHandle();
                socketHandle.init();
                userObj.id = socketHandle.getSocketId();
                socketHandle.login(userObj);
                $('#login-model').modal();
            }
        })
    }
</script>
</html>
